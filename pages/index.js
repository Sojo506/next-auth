import Head from "next/head";
import { getSession } from "next-auth/react";
import { useEffect, useState } from "react";
import { useRouter } from "next/router";
import { useSession } from "next-auth/react";
import Skeleton from "../components/Skeleton";
import Image from "next/image";

export default function Home() {
  const router = useRouter();
  const { data: session, status } = useSession();
  const [loading, setLoading] = useState(true);

  setTimeout(() => {
    setLoading(true);
  }, 2000);

  useEffect(() => {
    setLoading(false);
  }, []);

  if (status === "unauthenticated") {
    router.push("/login");
  }

  return (
    <>
      <Head>
        <title>Next Auth</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center items-center flex-col">
        <h1 className="font-mono font-bold text-3xl my-10">
          Your Data is MINE
        </h1>

        {session && loading ? (
          <div className="bg-gray-400 rounded mt-2 p-2 flex flex-col gap-2 font-mono">
            <Image
              src={`${session.user.image}`}
              alt={session.user.name}
              width={64}
              height={64}
              className="rounded mx-auto my-5"
            />
            <h2 className="font-bold">{session.user.name}</h2>
            <p className="">{session.user.email}</p>
            <p className="">
              {`&quot;`}But I must explain to you how all this mistak...
              {`&quot;`}
            </p>
            <button
              className="bg-yellow-400 transition duration-200 ease-in transform hover:bg-[#333] hover:text-white"
              onClick={() => router.push("/api/auth/signout")}
            >
              Sign Out
            </button>
          </div>
        ) : (
          <Skeleton />
        )}
      </main>
    </>
  );
}

/* export const getServerSideProps = async (context) => {
  const session = await getSession(context);

  return {
    props: {
      session,
    },
  };
}; */
